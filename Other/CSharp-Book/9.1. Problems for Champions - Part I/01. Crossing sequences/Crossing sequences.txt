Problem URL - https://csharp-book.softuni.org/Content/Chapter-9-1-problems-for-champions/crossing-sequences/crossing-sequences.html#problem-crossing-sequences

Problem: Crossing Sequences
We have two sequences:
•	a sequence of Tribonacci (by analogy with the Fibonacci sequence), where each number is the sum of the previous three (with given three numbers)
•	a sequence generated by a numerical spiral defined by looping like a spiral (right, bottom, left, top, right, bottom, left, top, etc.) of a matrix of numbers starting from its center with a given starting number and incremental step, by storing the current numbers in the sequence each time we make a turn
Write a program that finds the first number that appears in both sequences defined in the aforementioned way.
Example
Let the Tribonacci sequence start with 1, 2 and 3. This means that the first sequence will contain the numbers 1, 2, 3, 6, 11, 20, 37, 68, 125, 230, 423, 778, 1431, 2632, 4841, 8904, 16377, 30122, 55403, 101902, and so on.
At the same time, let the numbers in the spiral begin with 5 and the spiral increases by 2 at each step.
 
Then the second sequence will contain the numbers 5, 7, 9, 13, 17, 23, 29, 37 and so on. We see that 37 is the first number to be found in the Tribonacci sequence and in the spiral one, and that is the desired solution to the problem.
Input Data
Input data should be read from the console.
•	On the first three lines of the input we will read three integers, representing the first three numbers in the Tribonacci sequence, positive non-zero numbers, sorted in ascending order.
•	On the next two lines of the input we will read two integers representing the first number and the step for each cell of the matrix for the spiral of numbers. The numbers representing the spiral are positive non-zero numbers.
Input data will always be valid and will always be in the format described. No need to check.
Output Data
The result should be printed on the console.
On the single line of the output, we must print the smallest number that occurs in both sequences. If there is no number in the range [1 … 1 000 000], which can be found in both sequences, print "No".
Constraints
•	All numbers in the input will be in the range [1 … 1 000 000].
•	Allowed program time: 0.3 seconds.
•	Allowed memory: 16 MB.

