@using ToDoList.Core.Models
@model IEnumerable<TaskViewModel>

@{
    ViewData["Title"] = "Filtered Tasks";
}
    <h1 class="text-center mb-5">@ViewBag.Title</h1>

<form class="text-center searchBar" asp-action="Filter">
    <input type="text" name="keyWord" class="keyWord" />
    <select name="searchOption" class="searchOption">
        <option value="Title">Title</option>
        <option value="Description">Description</option>
    </select>
    <button class="filtered">Search</button>
    <button asp-controller="Home" asp-action="Index" class="filtered">Clear</button>
</form>
<hr />

@if (Model.Count() > 0)
{
    <div class="row">
        @foreach (var t in Model)
        {
            <div class="col-sm-6 mb-3 mb-sm-3">
                <div class="card" id="customTaskDiv">
                    <div class="card-title text-center">@t.Title</div>
                    <div class="card-body">
                        <p>@t.Description</p>
                    </div>
                    <div class="buttonsDiv">
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@t.Id" id="editAnchor">Edit</a>
                        <a class="btn btn-primary" asp-action="Done" asp-route-id="@t.Id" id="doneAnchor">Done</a>
                        <a class="btn btn-primary" asp-action="Delete" asp-route-id=@t.Id id="deleteAnchor">Delete</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No results.</p>
}
<div class="addBtnDiv">
    <a class="btn btn-dark" asp-controller="Home" asp-action="Completed">Completed Tasks</a>
</div>